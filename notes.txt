A component consists of three things:
- A component class the handles data and functionality
- An HTML template that determines the UI
- Component-specific styles that define the look and feel

Structural directives:
*ngFor,
*ngIf

Angular's interpolation syntax. {{ object.field }}
Interpolation {{ }} lets you render the property value as text.

Property binding [ ] syntax uses a set of brackets
Event binding ( ) syntax uses a set of parentheses

The @Component() decorator indicates that a class is a component.
@Component() also provides metadata about the component,
including its selector, templates, and styles.

The @Input() decorator indicates that the property value
passes in from the component's parent

The @Output() decorator marks a class field as an output property 
and supplies configuration metadata. The DOM property bound to the
output property is automatically updated during change detection.