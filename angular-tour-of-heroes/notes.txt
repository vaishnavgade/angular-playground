The double curly braces are Angular's interpolation binding syntax.
This interpolation binding presents the component's property value inside the HTML header tag.

You always import the Component symbol from the Angular core library
and annotate the component class with @Component.
@Component is a decorator function that specifies the Angular metadata for the component.

Pipes are a good way to format strings, currency amounts, dates, and other display data.
Angular ships with several built-in pipes, and you can create your own.

[(ngModel)] is Angular's two-way data binding syntax.
Although ngModel is a valid Angular directive, it isn't available by default.
It belongs to the optional FormsModule and you must opt in to using it.

Angular needs to know how the pieces of your application fit together and what other files
and libraries the application requires. This information is called metadata.

Some of the metadata is in the @Component decorators that you added to your component classes.
Other critical metadata is in @NgModule decorators.

The most important @NgModule decorator annotates the top-level AppModule class.

Add FormsModule to the imports array in @NgModule.
The imports array contains the list of external modules that the application needs.

Every component must be declared in exactly one NgModule.

(click) is Angular's event binding syntax.
The parentheses around click tell Angular to listen for the <button> element's click event.
When the user clicks in the <button>, Angular executes the onSelect(hero) expression.

The *ngIf directive tells Angular to render the section only when the condition is satisfied.

Angular's class binding can add and remove a CSS class conditionally.
Add [class.some-css-class]="some-condition" to the element you want to style.